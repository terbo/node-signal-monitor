[
    {
        "id": "b417b444.a1e7d8",
        "type": "tab",
        "label": "Sigmon Map",
        "disabled": false,
        "info": "Map WIFi devices.\n\nConnect to node websocket server which is sent wifi packets from various gps enabled sensors in monitor mode."
    },
    {
        "id": "121741fa.42f22e",
        "type": "worldmap in",
        "z": "b417b444.a1e7d8",
        "name": "Map Element",
        "path": "/map",
        "events": "all",
        "x": 115,
        "y": 60,
        "wires": [
            [
                "84a041b7.f2728"
            ]
        ]
    },
    {
        "id": "902fdb3e.ceba",
        "type": "worldmap",
        "z": "b417b444.a1e7d8",
        "name": "Map Control",
        "lat": "",
        "lon": "",
        "zoom": "17",
        "layer": "Esri Satellite",
        "cluster": "19",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "true",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "none",
        "showgrid": "false",
        "path": "/map",
        "x": 715,
        "y": 60,
        "wires": []
    },
    {
        "id": "84a041b7.f2728",
        "type": "function",
        "z": "b417b444.a1e7d8",
        "name": "HandleCmd",
        "func": "const cfg = flow.get('cfg')\n\nif(msg.payload.hasOwnProperty('action')) {\n    if(msg.payload['action'] == 'connected') {\n        flow.set('map_connected', 1)\n        \n        var loc = flow.get('location')\n        if(loc === undefined)\n            loc = cfg.home\n        \n        const command = {'lat': loc.lat,\n                    'lon': loc.lon,\n                    'zoom': cfg.default_zoom,\n                    'layer': ['Esri Satellite'],\n                    'showlayer': ['roads','railways'],\n                    'button': { 'name': 'toggleMove', 'icon': 'fa-star'},\n            }\n        msg.payload.command = command\n        node.log('Map Connected')\n        return msg;\n    } else if (msg.payload['action'] == 'disconnected') {\n        node.error('Map Disconnected')\n        flow.set('map_connected', 0)\n    } else if( msg.payload['action'] == 'button') {\n        if(msg.payload['name'] == 'toggleMove')\n            cfg.move_map = !cfg.move_map\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 415,
        "y": 60,
        "wires": [
            [
                "902fdb3e.ceba"
            ]
        ]
    },
    {
        "id": "5140eb08.d4554c",
        "type": "function",
        "z": "b417b444.a1e7d8",
        "name": "Draw Marker",
        "func": "const cfg = flow.get('cfg')\nconst pkt = msg.payload\n\nvar macs = flow.get('macs')\n\nvar mac = pkt.mac\nvar name;\n\nif(macs.hasOwnProperty(pkt.mac)) {\n    if(macs[mac].location == pkt.location) {\n        return\n    }\n} else {\n    macs[mac] = { vendor: pkt.vendor,\n                  lat: pkt.location.lat,\n                  lon: pkt.location.lon,\n                  firstseen: new Date(),\n                  lastseen: new Date(),\n                  type: pkt.type,\n                  rssi: pkt.rssi.last,\n                }\n}\n\nif(pkt.ssid.length > 0)\n    name = pkt.ssid\nelse\n    name = pkt.macSm\n    \nconst intensity = (parseInt(pkt.rssi.last) + 100) * 0.01\n\nmsg.payload = {'name': name,\n               'lat': pkt.location.lat, 'lon': pkt.location.lon,\n               'ttl': cfg.ap_ttl,\n               'icon': 'fa-wifi',\n               'rssi': pkt.rssi.last,\n               'vendor': pkt.vendor,\n               'layer': pkt.type.toUpperCase(),\n               //'iconColor': cfg.ap_color,\n               'intensity': intensity\n}\n\nflow.set('macs',macs)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 330,
        "wires": [
            [
                "902fdb3e.ceba"
            ]
        ]
    },
    {
        "id": "1dc4a600.45ff02",
        "type": "worldmap-tracks",
        "z": "b417b444.a1e7d8",
        "name": "",
        "depth": "150",
        "layer": "single",
        "x": 650,
        "y": 195,
        "wires": [
            [
                "902fdb3e.ceba"
            ]
        ]
    },
    {
        "id": "b66083d6.f71cb8",
        "type": "function",
        "z": "b417b444.a1e7d8",
        "name": "Subscribe",
        "func": "var msg2 = {payload:{cmd: 'subscribe'}}\nreturn msg2",
        "outputs": 1,
        "noerr": 0,
        "x": 495,
        "y": 495,
        "wires": [
            [
                "949896c5.99102"
            ]
        ]
    },
    {
        "id": "a3c31fa2.30427",
        "type": "function",
        "z": "b417b444.a1e7d8",
        "name": "Get Location",
        "func": "var msg2 = {}\n\nif(msg.payload.hasOwnProperty('location')) {\n    const lon = msg.payload.location.lon\n    const lat = msg.payload.location.lat\n    \n    flow.set('location', {\n        lat: lat,\n        lon: lon,\n    })\n    \n    msg2.payload =  {\n       'name': 'cb',\n       'lat': lat,\n       'lon': lon,\n       'icon': 'car', 'addtoheatmap': 'false',\n       'draggable': false, \n       'ttl': 720,\n       'layer': 'Me'\n    }\n}\nreturn [msg, msg2]",
        "outputs": 2,
        "noerr": 0,
        "x": 445,
        "y": 195,
        "wires": [
            [
                "c9f89c54.fb386"
            ],
            [
                "1dc4a600.45ff02",
                "902fdb3e.ceba"
            ]
        ]
    },
    {
        "id": "28c7819d.37363e",
        "type": "websocket in",
        "z": "b417b444.a1e7d8",
        "name": "WebSocket IN",
        "server": "",
        "client": "5ca850b4.53dc58",
        "x": 115,
        "y": 195,
        "wires": [
            [
                "bd17624a.29c09"
            ]
        ]
    },
    {
        "id": "3a9b6036.6add",
        "type": "inject",
        "z": "b417b444.a1e7d8",
        "name": "init",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2.2",
        "x": 140,
        "y": 495,
        "wires": [
            [
                "ae9a8a69.60a7a"
            ]
        ]
    },
    {
        "id": "949896c5.99102",
        "type": "websocket out",
        "z": "b417b444.a1e7d8",
        "name": "WebSocket Out",
        "server": "",
        "client": "5ca850b4.53dc58",
        "x": 693,
        "y": 495,
        "wires": []
    },
    {
        "id": "bd17624a.29c09",
        "type": "json",
        "z": "b417b444.a1e7d8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 275,
        "y": 195,
        "wires": [
            [
                "a3c31fa2.30427"
            ]
        ]
    },
    {
        "id": "e615ab45.e71168",
        "type": "split",
        "z": "b417b444.a1e7d8",
        "name": "forEach",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 476,
        "y": 330,
        "wires": [
            [
                "5140eb08.d4554c"
            ]
        ]
    },
    {
        "id": "c9f89c54.fb386",
        "type": "switch",
        "z": "b417b444.a1e7d8",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "latest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "dump",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 174,
        "y": 330,
        "wires": [
            [
                "50f50628.3b91a8"
            ],
            [
                "50f50628.3b91a8"
            ]
        ]
    },
    {
        "id": "50f50628.3b91a8",
        "type": "change",
        "z": "b417b444.a1e7d8",
        "name": "move",
        "rules": [
            {
                "t": "move",
                "p": "payload.data.db",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 324,
        "y": 330,
        "wires": [
            [
                "e615ab45.e71168"
            ]
        ]
    },
    {
        "id": "ae9a8a69.60a7a",
        "type": "function",
        "z": "b417b444.a1e7d8",
        "name": "Set Config",
        "func": "const cfg = { audio: true,\n        speech: true,\n        status_interval: 30,\n        beacon_sleep: 7,\n        move_map: 1,\n        ap_ttl: 360,\n        ap_color: '#dddddd',\n        probe_ttl: 120,\n        probe_color: '#aaaaaa',\n        home: [0,0],\n        default_zoom: 18,\n        map_redraw: 5000,\n}\n\nflow.set('cfg',cfg)\nflow.set('log',[])\n\nif(!flow.get('macs'))\n  flow.set('macs',{})\n\nflow.set('stats',{\n    'probes': 0, 'beacons': 0, 'packets': 0,\n    'aps': 0, 'clients': 0, 'vendors': {}\n    }\n)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 305,
        "y": 495,
        "wires": [
            [
                "b66083d6.f71cb8"
            ]
        ]
    },
    {
        "id": "5ca850b4.53dc58",
        "type": "websocket-client",
        "z": "",
        "path": "ws://127.0.0.1:8989/ws",
        "tls": "",
        "wholemsg": "false"
    }
]
